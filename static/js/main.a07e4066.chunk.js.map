{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notoficatin.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","el","idx","className","css","btn","onClick","type","Section","title","children","box","Statistics","good","neutral","bad","total","positivePercentage","content","Notification","message","App","state","countTotalFeedback","countPositiveFeedbackPercentage","res","Math","round","handleButtonClick","e","setState","prevState","this","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,8B,qBCA5BD,EAAOC,QAAU,CAAC,IAAM,+B,gBCAxBD,EAAOC,QAAU,CAAC,IAAM,uB,gBCAxBD,EAAOC,QAAU,CAAC,QAAU,+B,+LCoBbC,EAjBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtBD,EAAQE,KAAI,SAACC,EAAIC,GAAL,OACV,cAAC,WAAD,UACE,wBACEC,UAAWC,IAAIC,IACfC,QAAS,kBAAMP,EAAgBE,IAC/BM,KAAK,SAHP,SAKGN,KANUC,O,gBCOJM,EAVC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,0BAASP,UAAWC,IAAIO,IAAxB,UACE,6BAAKF,IACJC,M,gBCYUE,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,gCACE,oBAAGd,UAAWC,IAAIc,QAAlB,mBAAkCL,KAClC,oBAAGV,UAAWC,IAAIc,QAAlB,sBAAqCJ,KACrC,oBAAGX,UAAWC,IAAIc,QAAlB,kBAAiCH,KACjC,oBAAGZ,UAAWC,IAAIc,QAAlB,oBAAmCF,KACnC,oBAAGb,UAAWC,IAAIc,QAAlB,gCAA+CD,S,iBCJpCE,EADM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,mBAAGjB,UAAWC,IAAIgB,QAAlB,SAA4BA,KCI5DC,E,4MACJC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPQ,mBAAqB,WACnB,MAA+B,EAAKD,MACpC,OADA,EAAQT,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBS,gCAAkC,WAChC,IAAQX,EAAS,EAAKS,MAAdT,KACFY,EAAMC,KAAKC,MAAOd,EAAO,EAAKU,qBAAwB,KAC5D,OAAKE,GACI,G,EAKXG,kBAAoB,SAAAC,GAClB,EAAKC,UAAS,SAAAC,GAAS,sBAAQF,EAAIE,EAAUF,GAAK,O,4CAGpD,WACE,MAA+BG,KAAKV,MAA5BT,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAEvB,OACE,sBAAKZ,UAAU,MAAf,UACE,cAAC,EAAD,CAASM,MAAM,wBAAf,SACE,cAAC,EAAD,CACEX,QAASmC,OAAOC,KAAKF,KAAKV,OAC1BvB,gBAAiBiC,KAAKJ,sBAI1B,cAAC,EAAD,CAASnB,MAAM,aAAf,SACIuB,KAAKT,qBAGL,cAAC,EAAD,CACEV,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOgB,KAAKT,qBACZN,mBAAkB,UAAKe,KAAKR,kCAAV,OAPpB,cAAC,EAAD,CAAcJ,QAAQ,kC,GAvChBe,aAuDHd,ICzDfe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a07e4066.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Statistics_content__or_zn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__2gBfm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Section_box__16-Wn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notoficatin_message__1soJO\"};","import PropTypes from 'prop-types';\nimport { Fragment } from 'react';\nimport css from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) =>\n  options.map((el, idx) => (\n    <Fragment key={idx}>\n      <button\n        className={css.btn}\n        onClick={() => onLeaveFeedback(el)}\n        type=\"button\"\n      >\n        {el}\n      </button>\n    </Fragment>\n  ));\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\nimport css from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={css.box}>\n    <h1>{title}</h1>\n    {children}\n  </section>\n);\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.array.isRequired,\n};\nexport default Section;\n","import PropTypes from 'prop-types';\nimport css from './Statistics.module.css';\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <p className={css.content}>Good: {good}</p>\n    <p className={css.content}>Neutral: {neutral}</p>\n    <p className={css.content}>Bad: {bad}</p>\n    <p className={css.content}>Total: {total}</p>\n    <p className={css.content}>Positive feedback: {positivePercentage}</p>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport css from './Notoficatin.module.css';\n\nconst Notification = ({ message }) => <p className={css.message}>{message}</p>;\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const res = Math.round((good / this.countTotalFeedback()) * 100);\n    if (!res) {\n      return 0;\n    }\n    return res;\n  };\n\n  handleButtonClick = e => {\n    this.setState(prevState => ({ [e]: prevState[e] + 1 }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleButtonClick}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {!this.countTotalFeedback() ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={`${this.countPositiveFeedbackPercentage()}%`}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}